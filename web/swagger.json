{
  "openapi": "3.0.0",
  "info": {
    "title": "Recipe API",
    "description": "A RESTful API for managing recipes",
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "http://localhost:8080",
      "description": "Local development server"
    }
  ],
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    },
    "schemas": {
      "Recipe": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "readOnly": true
          },
          "name": {
            "type": "string"
          },
          "prepTime": {
            "type": "integer",
            "description": "Preparation time in minutes"
          },
          "difficulty": {
            "type": "integer",
            "minimum": 1,
            "maximum": 3,
            "description": "Difficulty level (1-3)"
          },
          "vegetarian": {
            "type": "boolean"
          },
          "avgRating": {
            "type": "number",
            "readOnly": true,
            "description": "Average rating (1-5)"
          },
          "ratings": {
            "type": "integer",
            "readOnly": true,
            "description": "Number of ratings received"
          }
        },
        "required": ["name", "prepTime", "difficulty"]
      },
      "Rating": {
        "type": "object",
        "properties": {
          "rating": {
            "type": "integer",
            "minimum": 1,
            "maximum": 5,
            "description": "Rating value (1-5)"
          }
        },
        "required": ["rating"]
      },
      "Auth": {
        "type": "object",
        "properties": {
          "username": {
            "type": "string"
          },
          "password": {
            "type": "string",
            "format": "password"
          }
        },
        "required": ["username", "password"]
      }
    }
  },
  "paths": {
    "/recipes": {
      "get": {
        "summary": "List all recipes",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "integer",
              "default": 1
            },
            "description": "Page number"
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "integer",
              "default": 10
            },
            "description": "Items per page"
          }
        ],
        "responses": {
          "200": {
            "description": "A list of recipes",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Recipe"
                      }
                    },
                    "page": {
                      "type": "integer"
                    },
                    "limit": {
                      "type": "integer"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create a new recipe",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Recipe"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Recipe created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Recipe"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/recipes/{id}": {
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "integer"
          }
        }
      ],
      "get": {
        "summary": "Get a recipe by ID",
        "responses": {
          "200": {
            "description": "A recipe",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Recipe"
                }
              }
            }
          },
          "404": {
            "description": "Recipe not found"
          }
        }
      },
      "put": {
        "summary": "Update a recipe",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Recipe"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Recipe updated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Recipe"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Recipe not found"
          }
        }
      },
      "delete": {
        "summary": "Delete a recipe",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "204": {
            "description": "Recipe deleted"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Recipe not found"
          }
        }
      }
    },
    "/recipes/{id}/rating": {
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "integer"
          }
        }
      ],
      "post": {
        "summary": "Rate a recipe",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Rating"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Recipe rated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Recipe"
                }
              }
            }
          },
          "400": {
            "description": "Invalid rating"
          },
          "404": {
            "description": "Recipe not found"
          }
        }
      }
    },
    "/recipes/search": {
      "get": {
        "summary": "Search recipes",
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Search query"
          },
          {
            "name": "vegetarian",
            "in": "query",
            "schema": {
              "type": "boolean"
            },
            "description": "Filter by vegetarian"
          },
          {
            "name": "difficulty",
            "in": "query",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 3
            },
            "description": "Filter by difficulty level"
          }
        ],
        "responses": {
          "200": {
            "description": "Search results",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Recipe"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/auth/register": {
      "post": {
        "summary": "Register a new user",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Auth"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "User registered"
          },
          "400": {
            "description": "Bad request"
          }
        }
      }
    },
    "/auth/login": {
      "post": {
        "summary": "Login and get JWT token",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Auth"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful login",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "token": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Invalid credentials"
          }
        }
      }
    }
  }
}
